{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","email","setEmail","submitted","setSubmitted","className","onSubmit","e","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","status","console","log","name","type","placeholder","onChange","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAAe,I,YCiEAA,MA7Df,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KA2BA,OACE,sBAAKC,UAAU,MAAf,UACiB,IAAdF,GACC,sBAAKE,UAAU,MAAf,UACE,sEACA,uBAAMC,SA9BC,SAACC,GACdA,EAAEC,iBAEFC,MAAM,iCAAkC,CACtCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEZ,UACvBa,QAAS,CACP,eAAgB,mBAChB,8BAA+B,OAGhCC,MAAK,SAAUC,GAEI,KAAdA,EAAIC,QACNC,QAAQC,IAAI,OACZf,EAAa,IACU,KAAdY,EAAIC,OACbb,EAAa,IAEbc,QAAQC,IAAI,WACZf,EAAa,QAUb,UACE,uBACEgB,KAAK,QACLC,KAAK,QACLC,YAAY,gCACZC,SAAU,SAAChB,GAAD,OAAOL,EAASK,EAAEiB,OAAOC,UAGrC,uBAAOJ,KAAK,SAASI,MAAM,oBAIlB,IAAdtB,GACC,qBAAKE,UAAU,MAAf,SACE,yDAGW,IAAdF,GACC,8BACE,wFC9CKuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.22dd21d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [email, setEmail] = useState(0);\n\n  const [submitted, setSubmitted] = useState(0);\n\n  const submit = (e) => {\n    e.preventDefault();\n    // console.log(\"email\", email);\n    fetch(\"http://localhost:3001/addemail\", {\n      method: \"POST\",\n      body: JSON.stringify({ email }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    }) //.then((res) => res.json());\n      .then(function (res) {\n        // res = res.json();\n        if (res.status == 200) {\n          console.log(\"200\");\n          setSubmitted(1);\n        } else if (res.status == 500) {\n          setSubmitted(2);\n        } else {\n          console.log(\"not 200\");\n          setSubmitted(0);\n        }\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      {submitted === 0 && (\n        <div className=\"App\">\n          <p>Hello! Subscribe to our mailing list.</p>\n          <form onSubmit={submit}>\n            <input\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"enter your email address here\"\n              onChange={(e) => setEmail(e.target.value)}\n              // value={email}\n            ></input>\n            <input type=\"submit\" value=\"Subscribe\"></input>\n          </form>\n        </div>\n      )}\n      {submitted === 1 && (\n        <div className=\"App\">\n          <p>Thanks for registering</p>\n        </div>\n      )}\n      {submitted === 2 && (\n        <div>\n          <p>Sorry, something is not working. Try again later.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}